# adapted from https://github.com/aws-samples/aws-batch-blueprints/blob/main/templates/batch-jq-ce-lt-local-ssd.yaml
# for Logan with c5d instances
#
#
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

AWSTemplateFormatVersion: '2010-09-09'
Description: Logan Clustering Cloudformation template for instances

Parameters:
  InstanceTypes:
    Description: EC2 instance types
    Type: List<String>
    Default: "r6gd.metal" # arm64, 64 cores, 512GiB memory
  Minvcpus:
    Type: Number
    Default: 0
    Description: Minimum number of vCPUs per Compute Environment
  Maxvcpus:
    Type: Number
    Default: 10000
    Description: Maximum number of vCPUs per Compute Environment
  EBSBootSize:
    Type: Number
    Default: 30
    Description: Size in GiB of EBS root volume

############################
## AWS Batch Infrastructure
Resources:
  BatchLaunchTemplateDisques:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateData:
          BlockDeviceMappings:
          - DeviceName: '/dev/xvda'
            Ebs:
              DeleteOnTermination: true
              Encrypted: false
              Iops: 3000
              VolumeSize: !Ref EBSBootSize
              VolumeType: 'gp3'
          UserData:
            Fn::Base64:
              !Sub |
                MIME-Version: 1.0
                Content-Type: multipart/mixed; boundary="==MYBOUNDARY=="

                --==MYBOUNDARY==
                Content-Type: text/x-shellscript; charset="us-ascii"

                #!/bin/bash

                exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1

                yum install -y jq mdadm

                MOUNT_POINT="/localdisk"
                mkdir -p $MOUNT_POINT

                devices=`lsblk -o NAME -p -J | jq -r '.blockdevices[] | select(has("children") | not) | .name'`
                nb_devices=`echo $devices | tr ' ' '\n' | wc -l`

                if [[ $nb_devices > 1 ]]; then
                  yes | mdadm --create --verbose /dev/md0 --level=0 --raid-devices=$nb_devices $devices
                  mkfs.xfs /dev/md0
                  mount /dev/md0 $MOUNT_POINT
                else
                  mkfs.xfs $devices
                  mount $devices $MOUNT_POINT
                fi

                # brice's trick
                sysctl vm.dirty_writeback_centisecs=200
                sysctl vm.dirty_bytes=4294967296
                sysctl vm.dirty_background_bytes=2147483648
            
                --==MYBOUNDARY==--

  BatchECSCED:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ComputeResources:
        AllocationStrategy: SPOT_PRICE_CAPACITY_OPTIMIZED
        LaunchTemplate:
            LaunchTemplateId: !Ref BatchLaunchTemplateDisques
            Version: !GetAtt BatchLaunchTemplateDisques.LatestVersionNumber
        MinvCpus: !Ref Minvcpus
        MaxvCpus: !Ref Maxvcpus
        Type: SPOT 
        InstanceRole: arn:aws:iam::797308887321:instance-profile/Logan-AnalysisDisques-BatchInstanceProfile-A3PIIioGLk7D
        InstanceTypes: !Ref InstanceTypes
        ImageId: ami-0735de0d7bfebab99 # amzn2-ami-ecs-hvm-2.0.20250102-arm64-ebs
        Ec2KeyPair: "serratus-joey-private-key-setup-by-rayan"
        SpotIamFleetRole: arn:aws:iam::797308887321:role/Logan-AnalysisDisques-SpotIamFleetRole-oa1vO7rRnII9
        Subnets: !Split [",", !ImportValue 'Logan-LargeScaleVPC-PrivateSubnets']
        Tags:
          Name: Logan-Clustering-SPOTD-1
        SecurityGroupIds:
        - !ImportValue 'Logan-LargeScaleVPC-SecurityGroup'
      ReplaceComputeEnvironment: false
      State: ENABLED

  BatchJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      JobQueueName: 'LoganClusteringJobQueueDisques'
      ComputeEnvironmentOrder:
        - ComputeEnvironment: !Ref BatchECSCED
          Order: 1
      Priority: 1
      State: "ENABLED"

  LoganClusteringSixtyFourCoreJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      JobDefinitionName: 'logan-clustering-64c-job' 
      ContainerProperties:
        Image:
          Fn::Join:
          - ''
          - - Ref: AWS::AccountId
            - .dkr.ecr.
            - Ref: AWS::Region
            - ".amazonaws.com/logan-cluster-job-arm64:latest"
        ResourceRequirements:
          - Type: MEMORY
            Value: "524288"  # r6gd.metal mem in MiB (512 GiB = 512 * 1024)
          - Type: VCPU
            Value: "64"
        MountPoints:
          - ContainerPath: "/localdisk"
            ReadOnly: false
            SourceVolume: localdisk
        Volumes:
          - Name: localdisk
            Host:
              SourcePath: "/localdisk"
      RetryStrategy:
        Attempts: 2
        EvaluateOnExit:
          - OnStatusReason: "Host EC2*"
            Action: "RETRY"
          - OnReason: "*"
            Action: "EXIT"


#############
## Outputs ##
#############
Outputs:
  ComputeEnvironment:
    Value: !Ref BatchECSCED
  JobQueue:
    Value: !Ref BatchJobQueue
